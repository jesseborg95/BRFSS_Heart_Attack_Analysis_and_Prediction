brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
tail(balanced_brfss, 5)
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
head(balanced_brfss, 5)
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
nrow(balanced_brfss)
head(balanced_brfss, 5)
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
nrow(balanced_brfss)
rownames(balanced_brfss) <- NULL
head(balanced_brfss, 5)
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
nrow(balanced_brfss)
rownames(balanced_brfss) <- NULL
tail(balanced_brfss, 5)
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=FALSE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=FALSE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample.int(2, nrow(balanced_brfss), replace=FALSE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=FALSE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# create test set and training set
set.seed(1)
heart_attack_sample <- sample(2, nrow(brfss_complete), replace=FALSE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# create test set and training set
set.seed(1)
heart_attack_sample <- sample(2, nrow(brfss_complete), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
heart_attack_training <- brfss_complete[heart_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
heart_attack_test <- brfss_complete[heart_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# decision trees
heart_attack_fit2 <- rpart(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, data=bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg('rattle')
fancyRpartPlot(heart_attack_fit2)
# decision trees
heart_attack_fit2 <- rpart(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30, data=bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
# decision trees
heart_attack_fit2 <- rpart(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, data=bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
# create attractive postcript plot of tree
post(kyphosisfit, file = "kythosisTree2.ps", title = "Classification Tree for Kythosis")
# create attractive postcript plot of tree
post(kyphosisfit, file = "kythosisTree2.ps", title = "Classification Tree for Kythosis")
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = balanced_brfss[, "heart_attack"] )
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_test[, "heart_attack"] )
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
table(tree.pred, bal_hrt_attack_test$heart_attack)
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cm
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
accuracy = cmm[[1]]
accuracy
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = cmm[[1]]
accuracy
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = cmm[[1]] + cmm[[3]]
accuracy
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = cmm[[1]] + cmm[[4]]
accuracy
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_test[, "heart_attack"] )
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.prune = prune.tree(heart_attack_fit2)
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, data=bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
# decision trees
heart_attack_fit2 <- rpart(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
names(cv.heart_attack)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_test[, "heart_attack"] )
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass, k=100)
cv.heart_attack$size
cv.heart_attack$dev
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass, k=5)
cv.heart_attack$size
cv.heart_attack$dev
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass, k=1)
cv.heart_attack$size
cv.heart_attack$dev
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass, k=10)
cv.heart_attack$size
cv.heart_attack$dev
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
View(bal_hrt_attack_training)
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=0)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 4)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 1)
plot(prune.heart_attack)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 2)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg('rattle')
fancyRpartPlot(heart_attack_fit2)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 4)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 2)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 3)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + high_bp + angina + stroke + kidney_disease + marital_status + employment_status + income  + sex + difficulty_walk + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
nrow(balanced_brfss)
rownames(balanced_brfss) <- NULL
tail(balanced_brfss, 5)
loadPkg("randomForest")
bag.hrt_attack = randomForest(heart_attack~., data=balanced_brfss, subset = balanced_hrt_attack_sample=1, mtry=33, importance=TRUE)
loadPkg("randomForest")
bag.hrt_attack = randomForest(heart_attack~., data=balanced_brfss, subset = balanced_hrt_attack_sample, mtry=33, importance=TRUE)
loadPkg("randomForest")
bag.hrt_attack = randomForest(heart_attack~., data=bal_hrt_attack_training, mtry=27, importance=TRUE)
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, data=heart_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
brfss_hrtattack <- subset(brfss_complete, heart_attack == '1')
brfss_no_hrtattack <- subset(brfss_complete, heart_attack == '0')
ratio1 <- nrow(brfss_hrtattack)/nrow(brfss_complete)
ratio2 <- nrow(brfss_no_hrtattack)/nrow(brfss_complete)
set.seed(1)
brfss_no_hrtattack <- sample_n(brfss_no_hrtattack, nrow(brfss_hrtattack))
balanced_brfss = rbind(brfss_hrtattack, brfss_no_hrtattack)
nrow(balanced_brfss)
rownames(balanced_brfss) <- NULL
tail(balanced_brfss, 5)
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, data=heart_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
# decision trees
heart_attack_fit2 <- tree(heart_attack ~ gen_health + mental_health + health_coverage + sleep_time + high_bp + time_since_cholcheck + angina + stroke + asthma + depression + kidney_disease + diabetes + veteran + marital_status + education_level + employment_status + income + weight + sex + difficulty_walk + smoke_100 + alc_past_30 + fruit_freq + green_veg_freq + exercise_30 + age5yr_bucket, bal_hrt_attack_training)
summary(heart_attack_fit2)
plot(heart_attack_fit2, uniform = TRUE, main="Classification Tree")
text(heart_attack_fit2, use.n = TRUE, all = TRUE, cex=.8)
loadPkg("caret")
cm = confusionMatrix( predict(heart_attack_fit2, type = "class"), reference = bal_hrt_attack_training[, "heart_attack"] )
print('Overall: ')
cm$overall
print('Class: ')
cm$byClass
tree.pred = predict(heart_attack_fit2, bal_hrt_attack_test, type = "class")
cmm = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm
accuracy = (cmm[[1]] + cmm[[4]])/sum(cmm)
accuracy
cv.heart_attack = cv.tree(heart_attack_fit2, FUN=prune.misclass)
cv.heart_attack$size
cv.heart_attack$dev
prune.heart_attack = prune.misclass(heart_attack_fit2, best = 5)
plot(prune.heart_attack)
text(prune.heart_attack, pretty=10)
tree.pred = predict(prune.heart_attack, bal_hrt_attack_test, type = "class")
cmm2 = table(tree.pred, bal_hrt_attack_test$heart_attack)
cmm2
accuracy2 = (cmm2[[1]] + cmm2[[4]])/sum(cmm2)
accuracy2
loadPkg('randomForest')
bag.heart_attack = randomForest(heart_attack~., data=balanced_brfss, subset = bal_hrt_attack_training, mtry=27, importance= TRUE)
loadPkg('randomForest')
bag.heart_attack = randomForest(heart_attack~., data=bal_hrt_attack_training, mtry=27, importance= TRUE)
loadPkg('randomForest')
bal_hrt_attack_training <- bal_hrt_attack_training[-c("weight")]
loadPkg('randomForest')
bal_hrt_attack_training <- bal_hrt_attack_training[,-c("weight")]
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, subset = -c("weight"))
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, subset = -c("weight"))
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, subset = -c(weight))
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, select = -c(weight))
bag.heart_attack = randomForest(heart_attack~., data=bal_hrt_attack_training, mtry=27, importance= TRUE)
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, select = -c(weight, state))
# create test set and training set
set.seed(1)
balanced_hrt_attack_sample <- sample(2, nrow(balanced_brfss), replace=TRUE, prob=c(0.70, 0.30)) # ASK EDWIN ABOUT REPLACE = TRUE
# select columns x-y as predictor variables for test/train outputs
bal_hrt_attack_training <- balanced_brfss[balanced_hrt_attack_sample==1, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
bal_hrt_attack_test <- balanced_brfss[balanced_hrt_attack_sample==2, c('heart_attack', 'state', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'time_since_cholcheck', 'angina', 'stroke', 'asthma', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'difficulty_walk', 'smoke_100', 'alc_past_30', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'age5yr_bucket')]
# create output variable for heart attack - NEED THIS?
# heart_attack.trainLabels <- brfss_complete[heart_attack_sample==1, 'heart_attack']
# heart_attack.testLabels <- brfss_complete[heart_attack_sample==2, 'heart_attack']
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, select = -c(weight, state))
bag.heart_attack = randomForest(heart_attack~., data=bal_hrt_attack_training, mtry=27, importance= TRUE)
bag.heart_attack
loadPkg('randomForest')
bal_hrt_attack_training <- subset(bal_hrt_attack_training, select = -c(weight, state))
loadPkg('randomForest')
#bal_hrt_attack_training <- subset(bal_hrt_attack_training, select = -c(weight, state))
bag.heart_attack = randomForest(heart_attack~., data=bal_hrt_attack_training, mtry=25, importance= TRUE)
bag.heart_attack
