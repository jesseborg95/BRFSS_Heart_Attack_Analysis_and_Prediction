#making contingency table for the categorical variable and heart_attack
contable19 = table(brfss_complete$sex, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest19 = chisq.test(contable19)
chi_p_value19 <- format(chitest19$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable20 = table(brfss_complete$difficulty_walk, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest20 = chisq.test(contable20)
chi_p_value20 <- format(chitest20$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable21 = table(brfss_complete$smoke_100, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest21 = chisq.test(contable21)
chi_p_value21 <- format(chitest21$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable22 = table(brfss_complete$smoke_100, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest22 = chisq.test(contable22)
chi_p_value22 <- format(chitest22$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable23 = table(brfss_complete$smokeless_tabac, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest23 = chisq.test(contable23)
chi_p_value23 <- format(chitest23$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable24 = table(brfss_complete$exercise_30, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest24 = chisq.test(contable24)
chi_p_value24 <- format(chitest24$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable25 = table(brfss_complete$age5yr_bucket, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest25 = chisq.test(contable25)
chi_p_value25 <- format(chitest25$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable18 = table(brfss_complete$sex, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest18 = chisq.test(contable18)
chi_p_value18 <- format(chitest18$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable17 = table(brfss_complete$income, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest17 = chisq.test(contable17)
chi_p_value17 <- format(chitest17$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable23 = table(brfss_complete$age5yr_bucket, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest23 = chisq.test(contable23)
chi_p_value23 <- format(chitest23$p.value, scientific = FALSE)
?format
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, 3, scientific = FALSE)
chi_p_value2
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(root.dir = FALSE)
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
#Eliminate scientific notation
options(scipen=999)
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
chi_p_value2
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, 3, scientific = FALSE)
chi_p_value2
chi_p_value2
chitest2$p.value
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, digits = 3, scientific = FALSE)
chi_p_value2
chitest2$p.value
chi_p_value9
chitest9
contable9
chitest9
chi_p_value23
#making contingency table for the categorical variable and heart_attack
contable23 = table(brfss_complete$age5yr_bucket, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest23 = chisq.test(contable23)
chi_p_value23 <- format(chitest23$p.value, digits = 3)
chi_p_value23
chitest23$p.value
chitest23
chitest22
knitr::opts_chunk$set(echo = TRUE)
#making contingency table for the two categorical variables
contable2 = table(diet_df$gender, diet_df$Diet)
chitest21
#making contingency table for the categorical variable and heart_attack
contable21 = table(brfss_complete$smokeless_tabac, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest21 = chisq.test(contable21)
chi_p_value21 <- format(chitest21$p.value, scientific = FALSE)
chitest21
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
# can add quietly=T option to the require() function
loadPkg = function(x) { if (!require(x,character.only=T, quietly =T)) { install.packages(x,dep=T,repos="http://cran.us.r-project.org"); if(!require(x,character.only=T)) stop("Package not found") } }
loadPkg('ggplot2')
loadPkg('dplyr')
loadPkg('usmap')
loadPkg('viridis')
load("brfss2013.RData")
# Choose which variables we want to keep
keeps <- c('X_state', 'imonth', 'genhlth', 'menthlth', 'hlthpln1', 'sleptim1', 'bphigh4', 'bpmeds', 'cholchk','toldhi2', 'cvdinfr4', 'cvdcrhd4', 'cvdstrk3', 'asthma3', 'asthnow', 'addepev2', 'chckidny', 'diabete3', 'veteran3', 'marital', 'educa', 'employ1', 'income2', 'weight2', 'sex', 'pregnant', 'diffwalk', 'smoke100', 'smokday2', 'stopsmk2', 'usenow3', 'alcday5', 'avedrnk2', 'drnk3ge5', 'fruit1', 'fvgreen', 'exerany2', 'prediab1', 'qlmentl2', 'qlstres2', 'drvisits', 'ssbsugar', 'cvdasprn', 'scntwrk1','X_ageg5yr')
brfss_reduced <- brfss2013[keeps]
# Rename the variables to be more descriptive
new_names <- c('state', 'month', 'gen_health', 'mental_health', 'health_coverage', 'sleep_time', 'high_bp', 'bp_meds', 'time_since_cholcheck','told_high_chol', 'heart_attack', 'angina', 'stroke', 'asthma', 'has_asthma_now', 'depression', 'kidney_disease', 'diabetes', 'veteran', 'marital_status', 'education_level', 'employment_status', 'income', 'weight', 'sex', 'pregnant', 'difficulty_walk', 'smoke_100', 'freq_smoke', 'stop_smoke_year', 'smokeless_tabac', 'alc_past_30', 'alc_perday_30', 'binge_alc', 'fruit_freq', 'green_veg_freq', 'exercise_30', 'prediabetes', 'depressed_30', 'anxious_30', 'dr_visits_year', 'soda_freq', 'aspirin_daily', 'work_hours_week','age5yr_bucket')
names(brfss_reduced) <- new_names
missing_vals <- colSums(is.na(brfss_reduced))
sort(missing_vals)
# Drop the variables which have too many missing values
brfss_reduced_drops <- subset(brfss_reduced, select = -c(dr_visits_year, prediabetes, binge_alc, alc_perday_30, freq_smoke, bp_meds, aspirin_daily, soda_freq, pregnant, stop_smoke_year, has_asthma_now, work_hours_week, depressed_30, anxious_30))
# Remove the rows which have na values in any of the remaining variables
brfss_complete <- na.omit(brfss_reduced_drops)
# Inspect the dataframe
str(brfss_complete)
# Check the levels for some varibles
levels(brfss_complete$high_bp)
levels(brfss_complete$employment_status)
levels(brfss_complete$smokeless_tabac)
levels(brfss_complete$diabetes)
# Change the factor levels for the variables wwe feel would be better off changed
levels(brfss_complete$health_coverage)[levels(brfss_complete$health_coverage) == 'Yes'] <- 1
levels(brfss_complete$health_coverage)[levels(brfss_complete$health_coverage) == 'No'] <- 0
levels(brfss_complete$heart_attack)[levels(brfss_complete$heart_attack) == 'Yes'] <- 1
levels(brfss_complete$heart_attack)[levels(brfss_complete$heart_attack) == 'No'] <- 0
levels(brfss_complete$angina)[levels(brfss_complete$angina) == 'Yes'] <- 1
levels(brfss_complete$angina)[levels(brfss_complete$angina) == 'No'] <- 0
levels(brfss_complete$stroke)[levels(brfss_complete$stroke) == 'Yes'] <- 1
levels(brfss_complete$stroke)[levels(brfss_complete$stroke) == 'No'] <- 0
levels(brfss_complete$asthma)[levels(brfss_complete$asthma) == 'Yes'] <- 1
levels(brfss_complete$asthma)[levels(brfss_complete$asthma) == 'No'] <- 0
levels(brfss_complete$depression)[levels(brfss_complete$depression) == 'Yes'] <- 1
levels(brfss_complete$depression)[levels(brfss_complete$depression) == 'No'] <- 0
levels(brfss_complete$kidney_disease)[levels(brfss_complete$kidney_disease) == 'Yes'] <- 1
levels(brfss_complete$kidney_disease)[levels(brfss_complete$kidney_disease) == 'No'] <- 0
levels(brfss_complete$veteran)[levels(brfss_complete$veteran) == 'Yes'] <- 1
levels(brfss_complete$veteran)[levels(brfss_complete$veteran) == 'No'] <- 0
levels(brfss_complete$difficulty_walk)[levels(brfss_complete$difficulty_walk) == 'Yes'] <- 1
levels(brfss_complete$difficulty_walk)[levels(brfss_complete$difficulty_walk) == 'No'] <- 0
levels(brfss_complete$smoke_100)[levels(brfss_complete$smoke_100) == 'Yes'] <- 1
levels(brfss_complete$smoke_100)[levels(brfss_complete$smoke_100) == 'No'] <- 0
levels(brfss_complete$exercise_30)[levels(brfss_complete$exercise_30) == 'Yes'] <- 1
levels(brfss_complete$exercise_30)[levels(brfss_complete$exercise_30) == 'No'] <- 0
levels(brfss_complete$diabetes)[levels(brfss_complete$diabetes) == "Yes, but female told only during pregnancy"] <- 1
levels(brfss_complete$diabetes)[levels(brfss_complete$diabetes) == "No, pre-diabetes or borderline diabetes"  ] <- 0
levels(brfss_complete$diabetes)[levels(brfss_complete$diabetes) == 'Yes'] <- 1
levels(brfss_complete$diabetes)[levels(brfss_complete$diabetes) == 'No'] <- 0
levels(brfss_complete$high_bp)[levels(brfss_complete$high_bp) == "Yes, but female told only during pregnancy"] <- 1
levels(brfss_complete$high_bp)[levels(brfss_complete$high_bp) == "Told borderline or pre-hypertensive" ] <- 1
levels(brfss_complete$high_bp)[levels(brfss_complete$high_bp) == 'Yes'] <- 1
levels(brfss_complete$high_bp)[levels(brfss_complete$high_bp) == 'No'] <- 0
levels(brfss_complete$employment_status)[levels(brfss_complete$employment_status) == "Employed for wages" ] <- 'Employed'
levels(brfss_complete$employment_status)[levels(brfss_complete$employment_status) == "Out of work for 1 year or more" ] <- 'Unemployed'
levels(brfss_complete$employment_status)[levels(brfss_complete$employment_status) == "Out of work for less than 1 year" ] <- 'Unemployed'
levels(brfss_complete$smokeless_tabac)[levels(brfss_complete$smokeless_tabac) == "Every day" ] <- 1
levels(brfss_complete$smokeless_tabac)[levels(brfss_complete$smokeless_tabac) == "Some days" ] <- 1
levels(brfss_complete$smokeless_tabac)[levels(brfss_complete$smokeless_tabac) == "Not at all" ] <- 0
str(brfss_complete)
#Making dataframe for visualizing heart attacks per state
#Notice that in order to add up the number of heart attacks, i convert the factor to a string and then an integer
state_map_df <- brfss_complete %>% select(state, heart_attack) %>% mutate(state = as.character(state)) %>% group_by(state) %>% summarise(sum_ = sum(as.numeric(as.character(heart_attack)))) %>% filter(state != c('District of Columbia', 'Puerto Rico', 'Guam'))
#Map showing number of heart attacks per
plot_usmap(data = state_map_df, values = "sum_", color = "white") +
scale_fill_continuous(name = "Heart Attack Count", label = scales::comma) +
labs(title = 'Number of Heart Attacks per State') +
theme(legend.position = "right")
#Make dataframe showing number of survey particpants by state
participants_map_df <-  brfss_complete %>% group_by(state) %>% summarise(n = n())
#Visualize map of number of participants per state
plot_usmap(data = participants_map_df, values = "n", color = "white") +
scale_fill_continuous(name = "Survey Participants by State", label = scales::comma) +
labs(title = 'Number of Survey Participants per State') +
theme(legend.position = "right")
#Visualize proportion of respondents with heart attacks by gen_health
ggplot(brfss_complete, aes(x = gen_health, fill = heart_attack)) +
geom_bar() +
ggtitle('Heart attack among levels of general health') +
ylab('Total') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#Visualize proportion of respondents with heart attacks by health_coverage
ggplot(brfss_complete, aes(x = health_coverage, fill = heart_attack)) +
geom_bar() +
ggtitle('Heart attacks among people with and without health insurance') +
ylab('Total') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#Visualize proportion of respondents with heart attacks by high_bp
ggplot(brfss_complete, aes(x = high_bp, fill = heart_attack)) +
geom_bar() +
ggtitle('Heart attacks among people with and without high blood pressure') +
ylab('Total') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#Filter out extreme sleep numbers to get ready to visualize
sleep_heartattack_df <- brfss_complete %>% select(sleep_time, heart_attack) %>%
filter(as.integer(sleep_time)<14) %>%  filter(as.integer(sleep_time)>3)
#Visualize sleep_time and heart_attack
ggplot(sleep_heartattack_df, aes(x = sleep_time, fill = heart_attack)) +
geom_bar() +
ggtitle('Heart attacks among levels of sleep') +
ylab('Total') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
brfss_complete <- brfss_complete %>%
mutate(cholchkrecent = ifelse(time_since_cholcheck == "Within past year", "Recent", "Not Recent"))
brfss_complete <- brfss_complete %>%
mutate(cholchkrecent_yes = ifelse(cholchkrecent == "Recent", 1, 0))
brfss_complete <- brfss_complete %>%
mutate(cholchkrecent_no = ifelse(cholchkrecent == "Not Recent", 1, 0))
T_cholchkrecent <- brfss_complete %>%
filter(told_high_chol != "No", !is.na(time_since_cholcheck), !is.na(age5yr_bucket)) %>%
group_by(age5yr_bucket) %>%
summarise(cholchkratio = sum(cholchkrecent_yes) / sum(cholchkrecent_no), cholchkpercent = sum(cholchkrecent_yes) / (sum(cholchkrecent_no) + sum(cholchkrecent_yes)), cholchkcount = n())
#ratio of those checked
ggplot(data = T_cholchkrecent, aes(x = age5yr_bucket, y = cholchkratio)) +
geom_point() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#percent of those checked
ggplot(data = T_cholchkrecent, aes(x = age5yr_bucket, y = cholchkpercent)) +
geom_point() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
T_cholchkrecent %>%
group_by(age5yr_bucket) %>%
summarise(cholchkratio, cholchkpercent, cholchkcount)
ggplot(brfss_complete, aes(x=age5yr_bucket, y=time_since_cholcheck, color = heart_attack)) +
geom_point(size=2) +
geom_jitter()
ggplot(brfss_complete, aes(x = smoke_100)) + geom_bar(aes(fill = heart_attack))
ggplot(brfss_complete, aes(x = angina)) + geom_bar(aes(fill = heart_attack))
ggplot(brfss_complete, aes(x = depression)) + geom_bar(aes(fill = heart_attack))
ggplot(brfss_complete, aes(x = kidney_disease)) + geom_bar(aes(fill = heart_attack))
ggplot(brfss_complete, aes(x = smoke_100, fill = heart_attack)) +
geom_bar() +
ggtitle('Number of participants to have smoked at least 100 cigarettes') +
ylab('Total') +
xlab('') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(brfss_complete, aes(x = smokeless_tabac, fill = heart_attack)) +
geom_bar() +
ggtitle('Number of participants to have used smokeless tobacco products') +
ylab('Total') +
xlab('') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
hist(brfss_complete$alc_past_30,
main = 'Frequency of alcohol consumption in 2013 among participants',
xlab = 'Alcohol Consumption',
col = magma(3),
breaks=seq(0,250,by=50))
hist(brfss_complete$fruit_freq,
main = 'Frequency of fruit consumption in 2013 among participants',
xlab = 'Fruit Consumption',
col = viridis(7),
breaks=seq(0,400,by=50))
hist(brfss_complete$green_veg_freq,
main = 'Frequency of dark green vegetable consumption in 2013 among participants',
xlab = 'Dark Green Vegetable Consumption',
col = cividis(3))
ggplot(brfss_complete, aes(x = exercise_30, fill = age5yr_bucket)) +
geom_bar() +
ggtitle('Number of participants to have exercised in the past 30 days') +
ylab('Total') +
xlab('') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values=plasma(13))
ggplot(brfss_complete, aes(x = diabetes, fill = heart_attack)) +
geom_bar() +
ggtitle('Number of participants that heart attack among diabetes patients') +
ylab('Total') +
scale_x_discrete(labels= c('Yes', 'No')) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(brfss_complete, aes(x = employment_status, fill = heart_attack)) +
geom_bar() +
ggtitle('Participants with heart attack by employment status ') +
ylab('Total') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(brfss_complete, aes(x = income, fill = heart_attack)) +
geom_bar() +
ggtitle('Participants with heart attack by Income distribution') +
ylab('Total') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
brfss_complete$weight = as.numeric(brfss_complete$weight)
hist(brfss_complete$weight,
main = 'Weight Distribution of Participants',
xlab = 'Weight (in Pounds)',
col = brfss_complete$heart_attack)
ggplot(brfss_complete, aes(x = sex, fill = heart_attack)) +
geom_bar() +
ggtitle('Participants with heart attack by sex') +
ylab('Total') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(size = 11, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#making contingency table for the categorical variable and heart_attack
contable1 = table(brfss_complete$gen_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest1 = chisq.test(contable1)
chi_p_value1 <- format(chitest1$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, digits = 3, scientific = FALSE)
chi_p_value2
chitest2$p.value
#making contingency table for the categorical variable and heart_attack
contable3 = table(brfss_complete$health_coverage, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest3 = chisq.test(contable3)
chi_p_value3 <- format(chitest3$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable4 = table(brfss_complete$high_bp, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest4 = chisq.test(contable4)
chi_p_value4 <- format(chitest4$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable5 = table(brfss_complete$time_since_cholcheck, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest5 = chisq.test(contable5)
chi_p_value5 <- format(chitest5$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable6 = table(brfss_complete$told_high_chol, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest6 = chisq.test(contable6)
chi_p_value6 <- format(chitest6$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable7 = table(brfss_complete$angina, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest7 = chisq.test(contable7)
chi_p_value7 <- format(chitest7$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable8 = table(brfss_complete$stroke, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest8 = chisq.test(contable8)
chi_p_value8 <- format(chitest8$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable9 = table(brfss_complete$asthma, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest9 = chisq.test(contable9)
chi_p_value9 <- format(chitest9$p.value, scientific = FALSE)
contable9
chitest9
#making contingency table for the categorical variable and heart_attack
contable10 = table(brfss_complete$depression, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest10 = chisq.test(contable10)
chi_p_value10 <- format(chitest10$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable11 = table(brfss_complete$kidney_disease, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest11 = chisq.test(contable11)
chi_p_value11 <- format(chitest11$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable12 = table(brfss_complete$diabetes, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest12 = chisq.test(contable12)
chi_p_value12 <- format(chitest12$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable13 = table(brfss_complete$veteran, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest13 = chisq.test(contable13)
chi_p_value13 <- format(chitest13$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable14 = table(brfss_complete$marital_status, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest14 = chisq.test(contable14)
chi_p_value14 <- format(chitest14$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable15 = table(brfss_complete$education_level, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest15 = chisq.test(contable15)
chi_p_value15 <- format(chitest15$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable16 = table(brfss_complete$employment_status, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest16 = chisq.test(contable16)
chi_p_value16 <- format(chitest16$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable17 = table(brfss_complete$income, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest17 = chisq.test(contable17)
chi_p_value17 <- format(chitest17$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable18 = table(brfss_complete$sex, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest18 = chisq.test(contable18)
chi_p_value18 <- format(chitest18$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable19 = table(brfss_complete$difficulty_walk, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest19 = chisq.test(contable19)
chi_p_value19 <- format(chitest19$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable20 = table(brfss_complete$smoke_100, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest20 = chisq.test(contable20)
chi_p_value20 <- format(chitest20$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable21 = table(brfss_complete$smokeless_tabac, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest21 = chisq.test(contable21)
chi_p_value21 <- format(chitest21$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable22 = table(brfss_complete$exercise_30, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest22 = chisq.test(contable22)
chi_p_value22 <- format(chitest22$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable23 = table(brfss_complete$age5yr_bucket, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest23 = chisq.test(contable23)
chi_p_value23 <- format(chitest23$p.value, digits = 3)
chi_p_value2
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, digits = 3, scientific = FALSE)
chi_p_value2
#making contingency table for the categorical variable and heart_attack
contable3 = table(brfss_complete$health_coverage, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest3 = chisq.test(contable3)
chi_p_value3 <- format(chitest3$p.value, scientific = FALSE)
chi_p_value3
chitest3$p.value
#making contingency table for the categorical variable and heart_attack
contable2 = table(brfss_complete$mental_health, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest2 = chisq.test(contable2)
chi_p_value2 <- format(chitest2$p.value, scientific = FALSE)
#making contingency table for the categorical variable and heart_attack
contable3 = table(brfss_complete$health_coverage, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest3 = chisq.test(contable3)
chi_p_value3 <- format(chitest3$p.value, scientific = FALSE)
chitest3$p.value
chi_p_value4
#making contingency table for the categorical variable and heart_attack
contable4 = table(brfss_complete$high_bp, brfss_complete$heart_attack)
#throw contingency table into chitest function and get p-value from test
chitest4 = chisq.test(contable4)
chi_p_value4 <- format(chitest4$p.value, scientific = FALSE)
chi_p_value4
chitest4$p.value
chitest4
?chisq.test
chi_p_value2
chitest2$p.value
